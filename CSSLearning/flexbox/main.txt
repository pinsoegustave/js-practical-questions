## CSS Learning: Flexbox
### Definition
The flexbox(flexible box) module aims at providing a more efficient way to lay out, align and distribute space among items in a container, even when their size is unkown and/or dynamic.

## Flexbox properties
### Properties for the Parent (flex container).
- Display: this defines flex container, inline or block depending on the given value.

‚ö†Ô∏èNote that CSS columns have no effect on a flex container.

- flex-direction: This establishes the main-axis, thus defining the direction flex items are placed in the container.
Values: -row(default), -row-reverse, -column, -column-reverse

-flex-wrap: By default, flex items will try to fit onto one line. You can change that and allow the items to wrap as needed with this property.
Values: -nowrap(default), -wrap, -wrap-reverse

-flex-flow: This is a shorthand for the flex-direction and flex-wrap properties, which together define the flex container's main and cross axes. 
Default value: nowrap

-justify-content: This defines the alignment along the main axis. It helps distribute extra free space leftover when either all the flex items on a line are inflexible, or are flexible but have reached their maximum size.
Values: -flex-start(default), -flex-end, -start, -end, -left, -right, -center, -space-between, -space-around, -space-evenly.
-(safe and unsafe) can also work 

-align-items: This defines the default behaviour for how flex items are laid out along the cross axis.(Opposite to justify-content)
Values: -stretch(default), -flex-start/start/self-start, -flex-end/end/self-end, -center, -baseline, (safe and unsafe which are not commonly due to browser support)

-align-content: This aligns the flex container's lines within where there is extra space in the cross axis, similar on how justify-content aligns its individual items within the main axis.
Values: -normal, -flex-start/start, -flex-end/end, -center, -space-between, -space-around, -space-evenly, -stretch

-gap, row-gap, column-gap: The gap property explicitly controls the space between flex items. It applies that spacing only between items not on the outer edges.
gap: 10px 20px /*row-gap column-gap/

### Properties for the children(flex items)
-order: By default, flex items are laid out in the source order. However, the order property controls the order in which they appear in the flex container.

‚ö†Ô∏è Note that the items in the same order revert to source order.

-flex-grow: This defines the ability for a flex item to grow if necessary. It accepts a unitless value that serves as a proportion.
‚ö†Ô∏è negative numbers are invalid

-flex-shrink: This defines the ability for a flex item to shrink if necessary.
‚ö†Ô∏è negative numbers are invalid

-flex-basis: This defines the default size of an element before the remaining space is distributed.
‚ö†Ô∏è If set to zero, the extra space around content isn't factored in. If set to auto, the extra space is distributed based on it's flex-grow value.

-flex: This is the shorthand for flex-grow, flex-shrink and flex-basis. The second and third parameters(flex-shrink and flex-basis) are optional. The default is 0 1 auto, but if you set it to a single value like flex: 5;, that changes the flex-basis to 0%, so it's like setting flex-grow: 5; flex-shrink: 1; flex-basis: 0%;
üìåIt is recommended that you use this shorthand property rather than set individual properties. The shorthand sets the other values intelligently.

-align-self: This allows the default alignment(or the one specified by align-items) to be overridden for individual flex items.
Values: -auto, -flex-start, -flex-end, -center, -baseline, -stretch